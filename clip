3 3
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [2]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 2
    checkig neighbours
      n: 4 has now [6]
      n: 6 has now [6]
  Collapsing 6
    telling tile to collapse
      tile 6 has collapsed to 6
    checkig neighbours
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [0]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 0
    checkig neighbours
      n: 4 has now [0, 3, 4]
      n: 6 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [2]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 2
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [0]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 0
    checkig neighbours
      n: 2 has now [0, 3, 4]
      n: 4 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 3
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [1]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 1
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [1, 3, 4]
  Doing minCollapse:
    choose: 2 id: [2]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 2
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 3
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [2]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 2
    checkig neighbours
      n: 4 has now [6]
      n: 6 has now [6]
  Collapsing 6
    telling tile to collapse
      tile 6 has collapsed to 6
    checkig neighbours
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 3
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 3
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [0]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 0
    checkig neighbours
      n: 2 has now [0, 3, 4]
      n: 4 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [0]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 0
    checkig neighbours
      n: 5 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 3 id: [0]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 0
    checkig neighbours
      n: 4 has now [0, 3, 4]
      n: 6 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 4 id: [0]

Starting iteration: 5
  waiting to be collapsed: 1
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 0
    checkig neighbours
      n: 5 has now [0, 3, 4]
      n: 7 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 5 id: [3]

Starting iteration: 6
  waiting to be collapsed: 1
  Collapsing 5
    telling tile to collapse
      tile 5 has collapsed to 3
    checkig neighbours
      n: 8 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [0]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 0
    checkig neighbours
      n: 2 has now [0, 3, 4]
      n: 4 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 3
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [0]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 0
    checkig neighbours
      n: 4 has now [0, 3, 4]
      n: 6 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [1]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 1
    checkig neighbours
      n: 5 has now [1, 3, 4]
  Doing minCollapse:
    choose: 4 id: [3]

Starting iteration: 5
  waiting to be collapsed: 1
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 3
    checkig neighbours
      n: 5 has now [1, 2, 5]
      n: 7 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [0]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 0
    checkig neighbours
      n: 4 has now [0, 3, 4]
      n: 6 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [1]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 1
    checkig neighbours
      n: 5 has now [1, 3, 4]
  Doing minCollapse:
    choose: 4 id: [3]

Starting iteration: 5
  waiting to be collapsed: 1
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 3
    checkig neighbours
      n: 5 has now [1, 2, 5]
      n: 7 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [1]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 1
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [1, 3, 4]
  Doing minCollapse:
    choose: 2 id: [2]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 2
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 3
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [1]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 1
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [1, 3, 4]
  Doing minCollapse:
    choose: 2 id: [2]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 2
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [1]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 1
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [1, 3, 4]
  Doing minCollapse:
    choose: 2 id: [1]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 1
    checkig neighbours
      n: 5 has now [1, 3, 4]
  Doing minCollapse:
    choose: 4 id: [2]

Starting iteration: 5
  waiting to be collapsed: 1
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 2
    checkig neighbours
      n: 5 has now [6]
      n: 7 has now [6]
  Collapsing 7
    telling tile to collapse
      tile 7 has collapsed to 6
    checkig neighbours
      n: 6 has now [0, 1, 2, 3, 4, 5]
      n: 8 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [2]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 2
    checkig neighbours
      n: 4 has now [6]
      n: 6 has now [6]
  Collapsing 6
    telling tile to collapse
      tile 6 has collapsed to 6
    checkig neighbours
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [1]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 1
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [1, 3, 4]
  Doing minCollapse:
    choose: 2 id: [2]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 2
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 3
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [3]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 3
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [1]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 1
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [1, 3, 4]
  Doing minCollapse:
    choose: 2 id: [2]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 2
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 3
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [4]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 4
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [0, 2, 3]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [0]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 0
    checkig neighbours
      n: 2 has now [0, 3, 4]
      n: 4 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [0]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 0
    checkig neighbours
      n: 5 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 3 id: [0]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 0
    checkig neighbours
      n: 4 has now [0, 3, 4]
      n: 6 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 4 id: [0]

Starting iteration: 5
  waiting to be collapsed: 1
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 0
    checkig neighbours
      n: 5 has now [0, 3, 4]
      n: 7 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 5 id: [3]

Starting iteration: 6
  waiting to be collapsed: 1
  Collapsing 5
    telling tile to collapse
      tile 5 has collapsed to 3
    checkig neighbours
      n: 8 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [0]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 0
    checkig neighbours
      n: 2 has now [0, 3, 4]
      n: 4 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 3
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [0]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 0
    checkig neighbours
      n: 2 has now [0, 3, 4]
      n: 4 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 3
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [2]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 2
    checkig neighbours
      n: 2 has now [6]
      n: 4 has now [6]
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 6
    checkig neighbours
      n: 3 has now [0, 1, 2, 3, 4, 5]
      n: 5 has now [0, 1, 2, 3, 4, 5]
      n: 7 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [0]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 0
    checkig neighbours
      n: 2 has now [0, 3, 4]
      n: 4 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [0]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 0
    checkig neighbours
      n: 5 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 3 id: [0]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 0
    checkig neighbours
      n: 4 has now [0, 3, 4]
      n: 6 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 4 id: [3]

Starting iteration: 5
  waiting to be collapsed: 1
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 3
    checkig neighbours
      n: 5 has now [1, 2, 5]
      n: 7 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [1]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 1
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [1, 3, 4]
  Doing minCollapse:
    choose: 2 id: [1]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 1
    checkig neighbours
      n: 5 has now [1, 3, 4]
  Doing minCollapse:
    choose: 4 id: [1]

Starting iteration: 5
  waiting to be collapsed: 1
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 1
    checkig neighbours
      n: 5 has now [1, 2, 5]
      n: 7 has now [1, 3, 4]
  Doing minCollapse:
    choose: 6 id: [1]

Starting iteration: 6
  waiting to be collapsed: 1
  Collapsing 6
    telling tile to collapse
      tile 6 has collapsed to 1
    checkig neighbours
      n: 7 has now [1, 2, 5]
  Doing minCollapse:
    choose: 5 id: [1]

Starting iteration: 7
  waiting to be collapsed: 1
  Collapsing 5
    telling tile to collapse
      tile 5 has collapsed to 1
    checkig neighbours
      n: 8 has now [1, 3, 4]
  Doing minCollapse:
    choose: 7 id: [2]

Starting iteration: 8
  waiting to be collapsed: 1
  Collapsing 7
    telling tile to collapse
      tile 7 has collapsed to 2
    checkig neighbours
      n: 8 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [0]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 0
    checkig neighbours
      n: 2 has now [0, 3, 4]
      n: 4 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [0]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 0
    checkig neighbours
      n: 5 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 3 id: [0]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 0
    checkig neighbours
      n: 4 has now [0, 3, 4]
      n: 6 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 4 id: [3]

Starting iteration: 5
  waiting to be collapsed: 1
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 3
    checkig neighbours
      n: 5 has now [1, 2, 5]
      n: 7 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [0]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 0
    checkig neighbours
      n: 1 has now [0, 3, 4]
      n: 3 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 1 id: [0]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 0
    checkig neighbours
      n: 2 has now [0, 3, 4]
      n: 4 has now [0, 2, 3, 4]
  Doing minCollapse:
    choose: 2 id: [3]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 3
    checkig neighbours
      n: 5 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [3]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 3
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [6]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [2]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 2
    checkig neighbours
      n: 1 has now [6]
      n: 3 has now [6]
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 6
    checkig neighbours
      n: 4 has now [0, 1, 2, 3, 4, 5]
      n: 6 has now [0, 1, 2, 3, 4, 5]
  Doing minCollapse:
 Trying again ...
Starting iteration: 0
  waiting to be collapsed: 0
  Doing minCollapse:
    choose: 0 id: [1]

Starting iteration: 1
  waiting to be collapsed: 1
  Collapsing 0
    telling tile to collapse
      tile 0 has collapsed to 1
    checkig neighbours
      n: 1 has now [1, 2, 5]
      n: 3 has now [1, 3, 4]
  Doing minCollapse:
    choose: 1 id: [1]

Starting iteration: 2
  waiting to be collapsed: 1
  Collapsing 1
    telling tile to collapse
      tile 1 has collapsed to 1
    checkig neighbours
      n: 2 has now [1, 2, 5]
      n: 4 has now [1, 3, 4]
  Doing minCollapse:
    choose: 3 id: [1]

Starting iteration: 3
  waiting to be collapsed: 1
  Collapsing 3
    telling tile to collapse
      tile 3 has collapsed to 1
    checkig neighbours
      n: 4 has now [1, 2, 5]
      n: 6 has now [1, 3, 4]
  Doing minCollapse:
    choose: 2 id: [1]

Starting iteration: 4
  waiting to be collapsed: 1
  Collapsing 2
    telling tile to collapse
      tile 2 has collapsed to 1
    checkig neighbours
      n: 5 has now [1, 3, 4]
  Doing minCollapse:
    choose: 4 id: [1]

Starting iteration: 5
  waiting to be collapsed: 1
  Collapsing 4
    telling tile to collapse
      tile 4 has collapsed to 1
    checkig neighbours
      n: 5 has now [1, 2, 5]
      n: 7 has now [1, 3, 4]
  Doing minCollapse:
    choose: 6 id: [3]

Starting iteration: 6
  waiting to be collapsed: 1
  Collapsing 6
    telling tile to collapse
      tile 6 has collapsed to 3
    checkig neighbours
      n: 7 has now [1, 2, 5]
  Doing minCollapse:
    choose: 5 id: [1]

Starting iteration: 7
  waiting to be collapsed: 1
  Collapsing 5
    telling tile to collapse
      tile 5 has collapsed to 1
    checkig neighbours
      n: 8 has now [1, 3, 4]
  Doing minCollapse:
    choose: 7 id: [1]

Starting iteration: 8
  waiting to be collapsed: 1
  Collapsing 7
    telling tile to collapse
      tile 7 has collapsed to 1
    checkig neighbours
      n: 8 has now [1, 2, 5]
  Doing minCollapse:
    choose: 8 id: [1]

Starting iteration: 9
  waiting to be collapsed: 1
  Collapsing 8
    telling tile to collapse
      tile 8 has collapsed to 1
    checkig neighbours
Finished
